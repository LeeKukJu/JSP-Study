JSP 연습문제 주관식 정리

01장 JSP 개요: 원리를 이해하고 개발 환경 구축하기

	01. 정적 웹 페이지와 동적 웹 페이지의 차이점을 설명하시오
	
	정적 웹 페이지는 컴퓨터에 저장된 텍스트 파일을 그대로 보는 것이고, 동적 웹 페이지는 저장된 내용을 다른 변수로
	가공 처리하여 보는 것이다. 정적 웹 페이지는 HTML과 같은 웹 언어로 작성하고, 동적 웹 페이지는 PHP, ASP, JSP와
	같은 웹 언어로 작성합니다.
	정적 웹 페이지는 미리 만들어놓은 정보만 보여주기 때문에 고객의 취향이나 변화에 적응할 수 없고, 새로운 것을 추가, 수정
	삭제하는 작업을 모두 수동으로 처리해야 하므로 관리하기가 어렵습니다. 하지만 동적인 요소가 없기 때문에 데이터베이스도
	필요 없고 구축하기 쉬우며, 단순 문서로만 이루어져 있어 서버 간 통신이 거의 없고 속도가 빠릅니다.
	또한 정적 문서로만 이루어져 있어 모든 호스팅 서버에서도 동작할 수 있다는 것이 장점입니다. 
	그러나 기술이 발전함에 따라 사용자의 기호에 맞게 능동적으로 변화하는 웹 페이지가 필요해져서 이를 위해 동적 웹 페이지를
	제공하는 PHP, ASP, JSP와 같은 언어가 개발되었다. 현재 우리가 보는 대부분의 웹 페이지는 동적 웹 페이지라고 할 수 
	있다. 동적 웹 페이지는 사용자가 웹 페이지에 글을 작성하거나 환경 설정 등을 바꾸면 그 내용이 서버에 있는 데이터베이스에
	저장되고 결과가 웹 페이지에 반영되는 형태로 동작한다.
	
	02. 웹 프로그래밍 언어 JSP 특징을 설명하시오.
	
	1). JSP는 서블릿 기술의 확장
	- JSP에서는 서블릿의 모든 기능을 사용할 수 있다. 즉 서블릿과 마찬가지로 JDBC, JNDI, EJB 등을 모두 포함하고
	있는 강력한 엔터프라이즈 자바 API를 사용할 수 있다. 또한 쉽게 개발할 수 있도록 JSP에서는 내장 객체, 미리 정의된
	태그, 표현식 언어와 사용자 정의 태그를 사용할 수 있다.
	
	2). JSP는 유지 관리가 용이하다.
	- 서블릿 기술에는 프레젠테이션 로직과 비즈니스 로직이 섞여 있지만 JSP기술의 경우 프레젠테이션 로직과 비즈니스 로직을
	분리할 수 있기 때문에 관리하기가 쉽습니다.
	
	3). JSP는 빠른 개발이 가능하다.
	- 코드를 수정했을 때 서블릿에서는 업데이트를 하고 다시 컴파일해야 한다. 그러나 JSP의 경우 다시 컴파일하고 프로젝트를
	배포할 필요가 없습니다.
	
	4). JSP로 개발하면 코드 길이를 줄일 수 있다.
	- JSP에서는 액션 태그, JSTL(JavaServer Pages Standard Tag Library), 사용자 정의 태그 등의 다양한
	태그와 표현 언어, 내장 객체 등을 사용함으로써 서블릿보다 코드를 줄일 수 있다.
	
	03. JSP페이지의 처리 과정을 설명하시오.
	
	1) 웹 브라우저가 웹 서버에 JSP를 요청한다. 웹 서버는 요청된 hello.jsp에서 jsp 확장자를 발견하여 JSP페이지임을
	확인하고 웹 서버에 있는 JSp 컨테이너에 전달한다.
	2) JSP 컨테이너는 JSP페이지를 서블릿 프로그램인 hello_jsp.java로 변환한다.
	3) JSP 컨테이너가 서블릿 프로그램을 컴파일하여 hello_jsp.class로 만들고 이를 웹 서버에 전달한다.
	4) 웹 서버는 정적 웹 페이지처럼 *.class의 실행 결과를 웹 브라우저에 응답으로 전달하므로 웹 브라우저는 새로 가공된
	HTML 페이지를 동적으로 처리한 결과를 보여준다.
	
	
	
	
	
02장 스크립트 태그: 시작 페이지 만들기

	01. 스크립트 태그의 세가지 종류에 대해 간단히 설명하시오
	
	1) 선언문 태그
	- 선언문 태그에 선언된 변수와 메소드는 JSP 페이지 임의의 위치에서 선언할 수 있으며, 스크립틀릿 태그보다 나중에
	선언해도 스크립틀릿 태그에서 사용할 수 있습니다. 선언문 태그로 선언된 변수는 전역변수로 사용되고, 선언문 태그로
	선언된 메소드는 전역 변수처럼 전역 메소드로 사용된다.
	
	2) 스크립틀릿 태그
	- 스크립틀릿 태그는 out객체를 사용하지 않고도 쉽게 HTML 응답을 만들어낼 수 있습니다.
	가장 일반적으로 사용되며 변수 또는 메소드 선언, 유효식 등 다수를 포함할 수 있습니다.
	모든 텍스트, HTML태그, 또는 JSP 요소는 스크립틀릿 태그 외부에 있어야 합니다.
	
	3) 표현문 태그
	- 표현문 태그를 이용하여 선언문 태그 또는 스크립틀릿 태그에서 선언된 변수나 메소드의 반환 값을 외부로 출력할 수 있다.
	표현문 태그는 스크립틀릿 태그에서 사용할 수 없으므로 이 경우에는 out.print()메소드를 사용해야 한다. 표현문 태그
	에 숫자, 문자, 불(bool) 등의 기본 데이터 타입과 자바 객체 타입도 사용 가능하다. 그리고 표현문 태그에 작성된 모든
	자바 코드의 값은 문자열로 변환되어 웹 브라우저에 출력된다.
	
	02. 선언문 태그와 스크립틀릿 태그의 차이점을 설명하시오.
	
	- 선언문 태그
	> 변수뿐만 아니라 메소드를 선언할 수 있다.
	
	- 스크립틀릿 태그
	> 스크립틀릿 태그는 메소드 없이 변수만을 선언할 수 있다.
	
	03. 애플리케이션 실행 결과에는 보이지 않는 JSP 주석 표기법은 무엇인가?
	
	<%-- JSP 주석 처리 내용 --%>
	
	
	
	
	
	
03장 디렉티브 태그: 한글 출력 및 페이지 모듈화하기

	01. 디렉티브 태그의 세 가지 유형에 대해 간단히 설명하시오.
	
		디렉티브 태그	|	형식					|	설명
		───────────────────────────────────────────────────────────────────────
		page		|	<%@ page ... %>		|	JSP 페이지에 대한 정보를 설정합니다.
		───────────────────────────────────────────────────────────────────────
		include		|	<%@ include ... %>	|	JSP 페이지의 특정 영역에 다른 문서를 포함합니다.
		───────────────────────────────────────────────────────────────────────
		taglib		|	<%@ taglib ... %>	|	JSP 페이지에서 사용할 태그 라이브러리를 설정합니다.
		
	
	02. JSP 페이지가 사용할 자바 클래스를 설정하기 위한 page 디렉티브 태그의 속성은 무엇인가?
		
		- import
		
	03. JSP 페이지의 특정 영역에 외부 파일의 내용을 포함하는 디렉티브 태그는 무엇인가?
		
		- include
		
		*** file이라는 속성의 파일명/경로를 포함한 파일명을 값으로 설정한다.	
	
	
	
	
	
	
	
05 장 내장객체: 상품 상세 정보 표시하기

	01. 폼 페이지에서 입력된 데이터를 전달하는 요청 파라미터 값을 JSP 페이지로 가져오는 내장 객체는 무엇인지, 그리고 관련된 메소드에
		대해 간단히 설명하시오.
		
		- request 내장 객체
		
			요청 파라미터 관련 메소드		|	반환 유형				|	설명
		──────────────────────────────────────────────────────────────────────────────
		getParameter(String name)	|	String				|	요청 파라미터 이름이 name인 값을 전달
									|						|	요청 파라미터 값이 없으면 null을 반환
		──────────────────────────────────────────────────────────────────────────────
		getParameterValues(String	|	String[]			|	모든 요청 파라미터 이름이 name인 값을 
							name)	|						|	배열 형태로 전달, 요청 파라미터 값이 없으면
									|						|	null을 반환
		──────────────────────────────────────────────────────────────────────────────
		getParameterNames()			| java.util.Enumeration |	모든 요청 파라미터의 이름과 값을 
									|						|	Enumeration 객체 타입으로 전달
		──────────────────────────────────────────────────────────────────────────────
		getParameterMap()			|	java.util.Map		|	모든 요청 파라미터의 이름과 같은 Map 객체
									|						|	타입으로 전달, (파라미터 이름, 값) 형식
		──────────────────────────────────────────────────────────────────────────────
		
		
	02. 서버에서 웹 브라우저에 다른 페이지로 강제 이동하도록 명령하는 내장 객체와 관련된 메소드는 무엇인가?
	
		- response 내장 객체
		
			패이지 이동 관련 메소드 : sendRedirect(String url)
			** 반환 유형 void
			** 설정한 URL 페이지로 강제 이동합니다.
		

	03. 스크립트 태그의 표현문과 같이 데이터를 출력하는 내장 객체는 무엇인가?
		
		- out 내장 객체
		
		
		
		
06장 폼 태그 : 상품 등록 페이지 만들기

	01. form 태그에 사용하는 속성에 대해 간단히 설명하시오.
	
	action : 폼 데이터를 받아 처리하는 웹 페이지의 URL을 설정합니다.
	method : 폼 데이터가 전송되는 HTTP 방식을 설정합니다.
	name : 폼을 식별하기 위한 이름을 설정합니다.
	target : 폼 처리 결과의 응답을 실행할 프레임을 설정합니다.
	enctype : 폼을 전송하는 콘텐츠 MIME 유형을 설정합니다.
	accept-charset : 폼 전송에 사용할 문자 인코딩을 설정합니다.
	
	02. form 태그 내에 중첩하여 사용하는 태그를 나열하고 설명하시오.
	
	input 태그
	- 사용자가 텍스트 입력이나 선택 등을 다양하게 할 수 있도록 공간을 만드는 태그로, 종료 태그 없이 단독으로 사용할 수 있다.
	
	select 태그
	- select 태그는 여러 개의 항목이 나타나는 목록 상자에서 항목을 선택하는 태그입니다.
	- 시작 태그와 종료 태그가 있으며, 리스트 박스에 여러 항목을 추가 삽입하기 위해 반드시 option 태그를 포함해야 합니다.
	
	textarea 태그
	- textarea 태그는 여러 줄의 텍스트를 입력할 수 있는 태그입니다. 가장 큰 특징은 입력 폼 안에 사용된 태그와 띄어쓰기가 그대로 출력
	
	03. 폼 페이지에서 전송된 데이터를 전달받는 내장 객체와 관련된 메소드는 무엇인가?
	
	- request 내장 객체
	- 요청 파라미터의 값 받기 : getParameter(요청 파라미터 이름)
	- 요청 파라미터의 전체 값 받기
	  : getParameterNames()  [java.util.Enumeration]
	   > 모든 입력 양식의 요청 파라미터 이름을 순서에 상관없이 Enumeration(열거형) 형태로 전달받는다.
	
	
	
07장 파일 업로드: 상품 이미지 등록하기

	01. 파일 업로드를 위한 form 태그 내에 반드시 설정해야 하는 기법은 무엇인가?
	
		method, enctype, action, name 등등
		
		1) form 태그의 method 속성은 반드시 POST 방식으로 설정해야 합니다.
		2) form 태그의 enctype 속성은 반드시 multipart/form-data 로 설정해야 합니다.
		3) form 태그의 action 속성은 파일 업로드를 처리할 JSP파일로 설정해야 합니다.
		4) 파일 업로드를 위해 input 태그의 type 속성을 file로 설정해야 합니다. 
			만약 여러 파일을 업로드하려면 2개 이상의 input 태그를 사용하고 name 속성에 서로 다른 값을 설정합니다.
			또는 multiple 속성을 사용합니다.
			
			
	02. 파일을 서버에 업로드하는 처리 기법에 대해 간단히 설명하시오.
	
		1) Commons-FileUpload 를 이용한 파일 업로드
		
			Commons-FileUpload를 이용하여 파일을 업로드하려면 먼저 Commons-FileUplaod 패키지에 포함되어 있는
			DiskFileUpload 객체를 생성합니다. 생성된 객체를 통해 DiskFileUpload 클래스가 제공하는 메소드를 사용하여 
			웹 브라우저가 전송한 multipart/form-data 유형의 요청 파라미터를 가져옵니다.
			그리고 FileItem 클래스의 메소드를 사용하여 요청 파라미터가 일반 데이터인지 파일인지 분석 및 처리하여 파일을 업로드합니다.
			
			
			
8장 유효성 검사: 상품 등록 데이터의 유효성 검사하기

	01. 유효성 검사란 무엇인가?
		
		유효성 검사는 사용자가 폼 페이지에서 입력한 데이터 값이 서버로 전송되기 전에 특정 규칙에 맞게 입력되었는지 검증하는 것을 말한다.
		
	02. 유효성 검사를 위한 두 가지 처리 기법을 간단히 설명하시오.
	
		1) 기본 유효성 검사는 사용자가 폼 페이지의 입력 항목에 입력한 데이터 값이 있는지 없는지 확인하고 데이터길이, 숫자 등 기본적인 것이
			맞는지 검사합니다.
			
		2) 데이터 형식 유효성 검사는 사용자가 폼 페이지의 입력 항목에 입력한 데이터 값이 특정 형태에 적합한지 검사하기 위해 정규 표현식을
			사용하는 방법으로 기본 유효성 검사보다 복잡합니다.
			
	03. 유효성 검사를 위한 핸들러 함수와 폼 페이지를 작성하는 기법을 설명하시오.
		
		1) input 태그의 type 속성 값이 submit인 경우 onclick 속성을 이용하여 핸들러 함수를 설정합니다.
			또는 form 태그의 onsubmit 속성 값에설정합니다.
			
		2) 자바 스크립트를 이용하여 <script>..</script> 내에 핸들러 함수를 작성합니다.
			<script>..</script> 구문은JSP 페이지의 어디에 위치해도 괜찮습니다.
			
		3) 폼 페이지에서 입력된 데이터 값을 핸들러 함수로 가져오기 위해 form 태그의 name 속성 또는 forms 객체를 이용합니다.
			forms 객체를 이용하는 경우, forms 객체는 배열의 형태이기 때문에 length 속성으로 크기를 알 수 있고
			배열 값인 index는 form태그가 나타나는 순서로 0부터 시작합니다.
			
			
10장
	01. 시큐리티란 무엇인가?
		- 허가된 사용자만이 특정 웹 페이지에 접근할 수 있도록 제한하는 보안 기능을 말한다.
		- 사용자가 권한이 없는 데이터에 접근하는 것을 막거나 웹 공격자가 전송 데이터를 중간에
			가로채는 것을 방지하는 등 중요한 역할을 한다.
			
	02. 시큐리티의 두 가지 처리 기법에 대해 간단히 설명하시오.
		- 선언적 시큐리티
		: 웹 애플리케이션 배포 설명자 web.xml 파일에 보안 구성을 작성하여 수행하는 방식.
			web.xml 파일에는 보안 역할, 보안 제약 사항, 인증 처리 등을 설정하여 보안을 구성
			
		- 프로그래밍적 시큐리티 처리
		: 웹 애플리케이션의 보안을 위해 코드를 작성하여 사용자의 권한 부여를 처리하는 방식.
			선언적 시큐리티의 보안으로 충분하지 않을 때 request 내장 객체의 메소드를 사용하여
			사용자를 승인하는 방법
	
	03. FORM 기반			
			
			
			
			
			
			
			
			
			
			
			
	
	
	
	
	
	
	
	
	
	
	 
			
			
			
			
			
			
			
			
			
			
			
			
			
			
	
	
	
	
	
	
	
	
	
	
	
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
											
	
	
	
	
	
	
	
	
	
	
	
	
	