/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.37
 * Generated at: 2023-02-06 05:59:35 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.ch11.totaltest;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import dto.BoardVO;
import dao.BoardDAO;

public final class boardUpdateForm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("/ch11/totaltest/./footer.jsp", Long.valueOf(1675412093693L));
    _jspx_dependants.put("jar:file:/D:/A_TeachingMaterial/08_Framework/01.JSP/workspace_jsp/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/JSPBook/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1674201770951L));
    _jspx_dependants.put("/ch11/totaltest/./menu.jsp", Long.valueOf(1675661815627L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("dto.BoardVO");
    _jspx_imports_classes.add("dao.BoardDAO");
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			"exceptionBoard_error.jsp", true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>@304_이국주</title>\r\n");
      out.write("</head>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\tfunction CheckRegist() {\r\n");
      out.write("\t\tvar form = document.registForm;\r\n");
      out.write("\t\tvar title = form.title.value;\r\n");
      out.write("\t\tvar author = form.author.value;\r\n");
      out.write("\r\n");
      out.write("\t\tvar regExpTitle = /^.{5,30}$/;\r\n");
      out.write("\t\tvar regExpAuthor = /^[a-zA-Z가-힣]+$/;\r\n");
      out.write("\r\n");
      out.write("\t\tif (!regExpTitle.test(title)) {\r\n");
      out.write("\t\t\talert(\"제목은 최소 모든 문자 5자에서 최대 30자까지 작성 가능합니다.\");\r\n");
      out.write("\t\t\tform.title.focus();\r\n");
      out.write("\t\t\tform.title.select();\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tif (!regExpAuthor.test(author)) {\r\n");
      out.write("\t\t\talert(\"작성자는 영소대문자, 한글만 작성 가능합니다.\");\r\n");
      out.write("\t\t\tform.author.focus();\r\n");
      out.write("\t\t\tform.author.select();\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tform.submit();\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
      out.write("<body>\r\n");
      out.write("\t<!-- \r\n");
      out.write("\t게시판 FORM 페이지를 작성해주세요.\r\n");
      out.write("\t\r\n");
      out.write("\t*** 수정을 하기위해서 가져온 수정 할 게시판 데이터를 아래에 먼저 출력해서 보여주세요.\r\n");
      out.write("\t\r\n");
      out.write("\t[출력 예]\r\n");
      out.write("\t\r\n");
      out.write("\t게시글 등록\r\n");
      out.write("\t─────────────────────────────\r\n");
      out.write("\t제목 : 제목입니다1\r\n");
      out.write("\t작성자 : 홍길동\r\n");
      out.write("\t내용 : 내용입니다1\r\n");
      out.write("\t─────────────────────────────\r\n");
      out.write("\t수정 목록\r\n");
      out.write("\t\r\n");
      out.write("\t1) 수정 버튼을 클릭 시, 게시글 수정을 진행해주세요.\r\n");
      out.write("\t\t수정을 위해 이동할 페이지(boardUpdate.jsp)로 이동해서 등록 처리를 진행해주세요.\r\n");
      out.write("\t\t등록이 완료되었다면 현재 등록된 상세정보 페이지(boardView)로 이동해주세요.\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t(정규식)\r\n");
      out.write("\t\t등록 시, 제목은 최소 모든 문자 5자에서 최대 30자까지로 설정가능하게 해주세요.\r\n");
      out.write("\t\t작성자는 영소대문자, 한글만 가능하게 설정해주세요. \r\n");
      out.write("\t\t\r\n");
      out.write("\t2) 목록 버튼을 클릭 시, 게시판 목록 페이지로 이동해주세요(boardList.jsp)\r\n");
      out.write(" -->\r\n");
      out.write("\t");

	String boardId = request.getParameter("id");

	BoardDAO boardDAO = BoardDAO.getInstance();
	BoardVO board = boardDAO.getBoardById(boardId);
	
      out.write('\r');
      out.write('\n');
      out.write('	');
      //  c:set
      org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
      boolean _jspx_th_c_005fset_005f0_reused = false;
      try {
        _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
        _jspx_th_c_005fset_005f0.setParent(null);
        // /ch11/totaltest/boardUpdateForm.jsp(71,1) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_c_005fset_005f0.setVar("board");
        // /ch11/totaltest/boardUpdateForm.jsp(71,1) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
        _jspx_th_c_005fset_005f0.setValue(board);
        int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
        if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f0);
        _jspx_th_c_005fset_005f0_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f0_reused);
      }
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css\"/>\r\n");
      out.write("<!-- \r\n");
      out.write("\t메뉴를 제공하는 페이지를 구성해주세요.\r\n");
      out.write("\t- 메뉴를 구성하고 각 페이지(view)를 담당하는 jsp 마다 페이지 모듈화를 진행해주세요.\r\n");
      out.write("\t\r\n");
      out.write("\t[상단 메뉴 구성]\r\n");
      out.write("\t게시판  자료실 -> boardList.jsp 요청 ( 시큐리티 작동하도록)\r\n");
      out.write(" -->\r\n");
      out.write("\r\n");
      out.write("<nav class=\"navbar navbar-expand navbar-dark bg-dark\">\r\n");
      out.write("\t<div class=\"container\">\r\n");
      out.write("\t\t<div class=\"navbar-header\">\r\n");
      out.write("\t\t\t<a class=\"navbar-brand\" href=\"./boardList.jsp\">게시판</a> \r\n");
      out.write("\t\t\t<a class=\"navbar-brand\" href=\"#\">자료실</a> \r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t");
if (request.isUserInRole("admin")){
			
      out.write("\r\n");
      out.write("\t\t\t\t<a class=\"navbar-brand\" href=\"./logout.jsp\">로그아웃</a>\r\n");
      out.write("\t\t\t");

			}
			
      out.write("\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</nav>");
      out.write("\r\n");
      out.write("\t<div class=\"jumbotron\">\r\n");
      out.write("\t\t<div class=\"container\" align=\"center\">\r\n");
      out.write("\t\t\t<h1 class=\"display-4\">게시글 수정</h1>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\t<div class=\"container\">\r\n");
      out.write("\t\t<form action=\"./boardUpdate.jsp\" name=\"registForm\" method=\"post\"\r\n");
      out.write("\t\t\tenctype=\"multipart/form-data\">\r\n");
      out.write("\t\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t\t<div class=\"col\">\r\n");
      out.write("\t\t\t\t\t<!-- id -->\r\n");
      out.write("\t\t\t\t\t<input type=\"hidden\" name=\"id\" value=\"");
      out.print(boardId);
      out.write("\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<!-- 제목 -->\r\n");
      out.write("\t\t\t\t\t<div class=\"input-group mb-3\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"input-group-prepend\">\r\n");
      out.write("\t\t\t\t\t\t\t<span class=\"input-group-text\" id=\"basic-addon1\">제목</span>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" name=\"title\"\r\n");
      out.write("\t\t\t\t\t\t\tplaceholder=\"제목을 작성해주세요.\" aria-label=\"Username\"\r\n");
      out.write("\t\t\t\t\t\t\taria-describedby=\"basic-addon1\">\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<!-- 작성자 -->\r\n");
      out.write("\t\t\t\t\t<div class=\"input-group mb-3\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"input-group-prepend\">\r\n");
      out.write("\t\t\t\t\t\t\t<span class=\"input-group-text\" id=\"basic-addon2\">작성자</span>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" name=\"author\"\r\n");
      out.write("\t\t\t\t\t\t\tplaceholder=\"작성자를 작성해주세요.\" aria-label=\"Username\"\r\n");
      out.write("\t\t\t\t\t\t\taria-describedby=\"basic-addon2\">\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<div class=\"input-group\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"input-group-prepend\">\r\n");
      out.write("\t\t\t\t\t\t\t<span class=\"input-group-text\">내용</span>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<textarea class=\"form-control\" name=\"content\"\r\n");
      out.write("\t\t\t\t\t\t\tstyle=\"height: 400px;\" aria-label=\"With textarea\"></textarea>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<br>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<!-- 파일 업로드 -->\r\n");
      out.write("\t\t\t\t\t<div class=\"input-group mb-3\">\r\n");
      out.write("\t\t\t\t\t\t<input type=\"file\" name=\"filename\" multiple=\"multiple\">\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t\t<div class=\"col\" align=\"left\">\r\n");
      out.write("\t\t\t\t\t<a class=\"btn btn-primary\" href=\"./boardList.jsp\" role=\"button\">목록\r\n");
      out.write("\t\t\t\t\t\t이동</a>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"col\" align=\"right\">\r\n");
      out.write("\t\t\t\t\t<!-- 등록하기 -->\r\n");
      out.write("\t\t\t\t\t<button type=\"button\" class=\"btn btn-primary\"\r\n");
      out.write("\t\t\t\t\t\tonclick=\"CheckRegist();\">수정하기</button>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<br>\r\n");
      out.write("\t");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>@304_이국주</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<!-- \r\n");
      out.write("\t@304_본인이름  으로 페이지를 구성해주세요.\r\n");
      out.write("\t- 메뉴를 구성하고 각 페이지(view)를 담당하는 jsp 마다 페이지 모듈화를 진행해주세요.\r\n");
      out.write(" -->\r\n");
      out.write(" \r\n");
      out.write(" <footer class=\"container\">\r\n");
      out.write("\t<p>&copy; 304_이국주</p>\r\n");
      out.write("</footer>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
